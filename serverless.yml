# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-s3imageupload

frameworkVersion: '3'

provider:
  name: aws
  profile: serverlessUser
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}

  # Lambda function's IAM Role
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource: '*'

  # environment variables
  environment:
    REGION: ${self:provider.region}
    IMAGE_UPLOAD_BUCKET: ${self:custom.imageUploadBucket}

custom:
  imageUploadBucket: ${self:service}-${self:provider.stage}-29052023

functions:
  imageUpload:
    handler: src/functions/imageUpload.handler
    events:
      - http:
          path: /image-upload
          method: POST
          cors: true

resources:
  Resources:
    ImageUploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.imageUploadBucket}

        # Granting public access to bucket
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--examples
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    ImageUploadBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref ImageUploadBucket
        PolicyDocument:
          Version: '2008-10-17'
          Statement:
            - Sid: AllowPublicReadAccess
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: arn:aws:s3:::${self:custom.imageUploadBucket}/*
              Condition:
                Bool:
                  aws:SecureTransport: 'true' # https://repost.aws/knowledge-center/s3-bucket-policy-for-config-rule
